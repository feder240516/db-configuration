plugins {
    id 'java'
    id 'java-library-distribution'
    id 'eclipse-wtp'
    id "org.sonarqube" version "3.1.1"
}
  
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'resources'
            srcDir 'conf'
        }
    }
    test {
           java {
               srcDir 'src/test/java'
           }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.23.0'

dependencies {
    compile('ai.libs:mlplan-full:0.2.4')
    compile('ai.libs:hasco-core:0.2.4')
    
    // include ailibs for compilation
    /*compile ('ai.libs:mlplan-meka:0.2.3') {
 		exclude group: 'org.nd4j'
 		exclude group: 'org.bytedeco.javacpp-presets'
 		exclude group: 'org.deeplearning4j'
 		exclude group: 'org.openjfx'
 		exclude group: 'com.sun.jersey'
 		exclude group: 'org.glassfish.jersey.core'
 		exclude group: 'org.glassfish.jersey.inject'
 		exclude group: 'org.apache.hadoop'
 		exclude group: 'org.apache.maven'
 		exclude group: 'org.apache.zookeeper'
 		exclude group: 'org.glassfish.jersey.ext'
 		exclude group: 'org.eclipse.rdf4j'
 		exclude group: 'net.sourceforge.owlapi'
 		exclude group: 'org.graphstream'
 		exclude group: 'com.github.graphstream'
 		exclude group: 'ai.libs.thirdparty'
    }*/
    
    /*compile ('ai.libs.thirdparty:interruptible-weka:0.1.5')
    compile ('ai.libs.thirdparty:interruptible-meka:0.1.2')*/
    compile ('commons-lang:commons-lang:2.6')
    
    compile('org.mariadb.jdbc:mariadb-java-client:2.1.2')
    
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'
    
    // https://mvnrepository.com/artifact/org.apache.derby/derbyclient
    compile('org.apache.derby:derbyclient:10.15.2.0')
	compile group: 'org.apache.derby', name: 'derbyclient', version: '10.15.2.0'
	//runtime group: 'org.apache.derby', name: 'derbyclient', version: '10.15.2.0'
	// https://mvnrepository.com/artifact/org.apache.derby/derby
	testCompile group: 'org.apache.derby', name: 'derby', version: '10.15.2.0'
	compile('org.hsqldb:hsqldb:2.5.0')
    
    // https://mvnrepository.com/artifact/com.healthmarketscience.sqlbuilder/sqlbuilder
	compile group: 'com.healthmarketscience.sqlbuilder', name: 'sqlbuilder', version: '3.0.1'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "5.7.1"
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: "1.7.1"
    testCompile("org.junit.jupiter:junit-jupiter-params:5.7.0")
	
	// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testCompile group: 'org.mockito', name: 'mockito-core', version: '3.8.0'
	
	// https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
	testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.8.0'
	
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
	
	compile ('org.jooq:jooq:3.14.7')
    
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    
    compile("com.h2database:h2")
    
    compile 'org.apache.commons:commons-csv:1.8'
    
    compile ("io.grpc:grpc-api:${grpcVersion}")
    compile ("io.grpc:grpc-core:${grpcVersion}")
    compile ("io.grpc:grpc-stub:${grpcVersion}")
    compile ("io.grpc:grpc-protobuf:${grpcVersion}")
  	compile ("io.grpc:grpc-netty:${grpcVersion}")
    compile ("com.google.protobuf:protobuf-java:3.11.0")
    
    compile fileTree(dir: 'libs', include: '*.jar')
    
    // #### FOR THE WEB API FOR TESTS ####
    // https://mvnrepository.com/artifact/com.sun.net.httpserver/http
	compile group: 'com.sun.net.httpserver', name: 'http', version: '20070405'
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	
    
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'db-configuration jar',  
        	'Implementation-Version': '0.0.1',
        	'Main-Class': 'main.MainHASCO'
    }
    baseName = project.name + '-all'
    from { 
    	configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    	configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } 
    }
    zip64 = true
    
    with jar
}

distZip.shouldRunAfter(build)

task evalcli(type: Jar) {   
	manifest {
        attributes 'Main-Class': 'main.MainHASCO'
    }
    zip64 = true
    baseName = 'MainHASCO-cli'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    with jar
}

repositories {
	mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" } 
    maven { url "https://clojars.org/repo/" }
    maven { url "https://plugins.gradle.org/m2/" }
}

sonarqube {
  properties {
    property 'sonar.host.url', 'feder240516_db-configuration'
    property 'sonar.organization', 'federico-reina'
    property 'sonar.projectKey', 'SonarSource_sonarcloud-github-action-samples'
  }
}